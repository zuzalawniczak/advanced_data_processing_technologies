--LAB 1

DROP TABLE wlasciciele5 CASCADE CONSTRAINTS;
DROP TABLE wlasciciele CASCADE CONSTRAINTS;
DROP TABLE samochody CASCADE CONSTRAINTS;

DROP TYPE samochod5 FORCE;
DROP TYPE wlasciciel FORCE;

DROP TYPE samochod FORCE;







--ZADANIE 1

CREATE TYPE samochod AS OBJECT (
    marka VARCHAR2(20),
    model VARCHAR2(20),
    kilometry NUMBER,
    data_produkcji DATE,
    cena NUMBER(10,2)
);

CREATE TABLE samochody of samochod;

insert into samochody values(NEW samochod('FIAT','BRAVA',60000,DATE '1999-11-30',25000));
insert into samochody values(NEW samochod('FORD','MONDEO',80000,DATE '1997-05-10',45000));
insert into samochody values(NEW samochod('MAZDA','323',12000,DATE '2000-09-22',52000));


--ZADANIE 2

create table wlasciciele(
    imie varchar2(100),
    nazwisko varchar2(100),
    auto samochod
);

insert into wlasciciele values('JAN','KOWALSKI', NEW SAMOCHOD('FIAT','SEICENTO',30000,DATE '2010-12-02',19500));
insert into wlasciciele values('ADAM','NOWAK', NEW SAMOCHOD('OPEL','ASTRA',34000,DATE '2009-06-01',33700));


--ZADANIE 3

alter type samochod replace as object (
    marka varchar2(20),
    model varchar2(20),
    kilometry number,
    data_produkcji date,
    cena number(10, 2),
    member function wartosc return number
);

create or replace type body samochod as
    member function wartosc return number is
    begin
        return round(cena * POWER(0.9, EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM data_produkcji)),2);
    end wartosc;
end;


select s.marka,s.cena,s.wartosc()
from samochody s;

--ZADANIE 4

ALTER TYPE samochod ADD MAP MEMBER FUNCTION odwzoruj
RETURN NUMBER CASCADE INCLUDING TABLE DATA;


create or replace type body samochod as
    member function wartosc return number is
    begin
        return round(cena * POWER(0.9, EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM data_produkcji)),2);
    end wartosc;
    map member function odwzoruj return number is
    begin
        return round(extract(year from current_date) - extract(year from data_produkcji) + (kilometry / 10000), 2);
    end odwzoruj;
end;

select * from samochody s order by value(s);

--ZADANIE 5

CREATE TYPE WLASCICIEL5 AS OBJECT (
    imie varchar2(100),
    nazwisko varchar2(100)
);

create table wlasciciele5 of wlasciciel5;

insert into wlasciciele5 values(Wlasciciel5('Zuzanna','Lawniczak'));

create type samochod5 as object(
    marka varchar2(20),
    model varchar2(20),
    kilometry number,
    data_produkcji date,
    cena number(10, 2),
    wlasciciel ref wlasciciel5
);

create table samochody5 of samochod5;
insert into samochody5 values   
    (new samochod5('ford', 'mondeo', 80000, date '1997-05-10', 45000, null));
insert into samochody5 values   
    (new samochod5('mazda', '323', 12000, date '2000-09-22', 52000, null));
insert into samochody5 values   
     (new samochod5('fiat', 'brava', 60000, date '1999-11-30', 25000, null));
     
update samochody5 s
set s.wlasciciel = (
    select ref(w) from wlasciciele5 w
    where w.imie = 'Zuzanna'
);
select * from samochody5;



--ZADANIE 6

SET SERVEROUTPUT ON SIZE 30000;

DECLARE
 TYPE t_przedmioty IS VARRAY(10) OF VARCHAR2(20);
 moje_przedmioty t_przedmioty := t_przedmioty('');
BEGIN
 moje_przedmioty(1) := 'MATEMATYKA';
 moje_przedmioty.EXTEND(9);
 FOR i IN 2..10 LOOP
 moje_przedmioty(i) := 'PRZEDMIOT_' || i;
 END LOOP;
 FOR i IN moje_przedmioty.FIRST()..moje_przedmioty.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moje_przedmioty(i));
 END LOOP;
 moje_przedmioty.TRIM(2);
 FOR i IN moje_przedmioty.FIRST()..moje_przedmioty.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moje_przedmioty(i));
 END LOOP;
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_przedmioty.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_przedmioty.COUNT());
 moje_przedmioty.EXTEND();
 moje_przedmioty(9) := '9';
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_przedmioty.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_przedmioty.COUNT());
 moje_przedmioty.DELETE();
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_przedmioty.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_przedmioty.COUNT());
END;

-- ZADANIE 7

DECLARE
 TYPE t_ksiazki IS VARRAY(10) OF VARCHAR2(100);
 moje_ksiazki t_ksiazki := t_ksiazki('tytul');
BEGIN
 moje_ksiazki(1) := 'MATEMATYKA dla opornych';
 moje_ksiazki.EXTEND(9);
 FOR i IN 2..10 LOOP
 moje_ksiazki(i) := 'ksiazka_' || i;
 END LOOP;
 FOR i IN moje_ksiazki.FIRST()..moje_ksiazki.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moje_ksiazki(i));
 END LOOP;
 moje_ksiazki.TRIM(2);
 FOR i IN moje_ksiazki.FIRST()..moje_ksiazki.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moje_ksiazki(i));
 END LOOP;
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_ksiazki.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_ksiazki.COUNT());
 moje_ksiazki.EXTEND();
 moje_ksiazki(9) := '9';
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_ksiazki.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_ksiazki.COUNT());
 moje_ksiazki.DELETE();
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moje_ksiazki.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moje_ksiazki.COUNT());
END;

-- ZADANIE 8

DECLARE
 TYPE t_wykladowcy IS TABLE OF VARCHAR2(20);
 moi_wykladowcy t_wykladowcy := t_wykladowcy();
BEGIN
 moi_wykladowcy.EXTEND(2);
 moi_wykladowcy(1) := 'MORZY';
 moi_wykladowcy(2) := 'WOJCIECHOWSKI';
 moi_wykladowcy.EXTEND(8);
 FOR i IN 3..10 LOOP
 moi_wykladowcy(i) := 'WYKLADOWCA_' || i;
 END LOOP;
 FOR i IN moi_wykladowcy.FIRST()..moi_wykladowcy.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moi_wykladowcy(i));
 END LOOP;
 moi_wykladowcy.TRIM(2);
 FOR i IN moi_wykladowcy.FIRST()..moi_wykladowcy.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moi_wykladowcy(i));
 END LOOP;
 moi_wykladowcy.DELETE(5,7);
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moi_wykladowcy.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moi_wykladowcy.COUNT());
 FOR i IN moi_wykladowcy.FIRST()..moi_wykladowcy.LAST() LOOP
 IF moi_wykladowcy.EXISTS(i) THEN
 DBMS_OUTPUT.PUT_LINE(moi_wykladowcy(i));
 END IF;
 END LOOP;
 moi_wykladowcy(5) := 'ZAKRZEWICZ';
 moi_wykladowcy(6) := 'KROLIKOWSKI';
 moi_wykladowcy(7) := 'KOSZLAJDA';
 FOR i IN moi_wykladowcy.FIRST()..moi_wykladowcy.LAST() LOOP
 IF moi_wykladowcy.EXISTS(i) THEN
 DBMS_OUTPUT.PUT_LINE(moi_wykladowcy(i));
 END IF;
 END LOOP;
 DBMS_OUTPUT.PUT_LINE('Limit: ' || moi_wykladowcy.LIMIT());
 DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || moi_wykladowcy.COUNT());
END;



-- ZADANIE 9

DECLARE
 TYPE t_miesiace IS TABLE OF VARCHAR2(20);
 moje_miesiace t_miesiace := t_miesiace();
BEGIN
 moje_miesiace.EXTEND(12);
 moje_miesiace(1) := 'STYCZEN';
 moje_miesiace(2) := 'LUTY';
 moje_miesiace(3) := 'MARZEC';
 moje_miesiace(4) := 'KWIECIEN';
 moje_miesiace(5) := 'MAJ';
 moje_miesiace(6) := 'CZERWIEC';
 moje_miesiace(7) := 'LIPIEC';
 moje_miesiace(8) := 'SIERPIEN';
 moje_miesiace(9) := 'WRZESIEN';
 moje_miesiace(10) := 'PAZDZIERNIK';
 moje_miesiace(11) := 'LISTOPAD';
 moje_miesiace(12) := 'GRUDZIEN';

 FOR i IN moje_miesiace.FIRST()..moje_miesiace.LAST() LOOP
 DBMS_OUTPUT.PUT_LINE(moje_miesiace(i));
 END LOOP;
 
 moje_miesiace.DELETE(4,9);

 FOR i IN moje_miesiace.FIRST()..moje_miesiace.LAST() LOOP
 IF moje_miesiace.EXISTS(i) THEN
 DBMS_OUTPUT.PUT_LINE(moje_miesiace(i));
 END IF;
 END LOOP;
END;








